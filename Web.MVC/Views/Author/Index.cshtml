@model Tier.Entities.Concrete.ResponseModel<Tier.Entities.Concrete.User>
@{
    string caption = Model.Data.Type == Tier.Entities.EnType.UserType.author.ToString() ? "Yazar" : "İşletme";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="page-title lb single-wrapper">
    <div class="container">
        <div class="row">
            <div class="col-lg-8 col-md-8 col-sm-12 col-xs-12">
                <h2><i class="fa fa-star bg-orange"></i>@caption : @Model.Data.FullName</h2>
            </div><!-- end col -->
            <div class="col-lg-4 col-md-4 col-sm-12 hidden-xs-down hidden-sm-down">
                <ol class="breadcrumb">
                    <li class="breadcrumb-item"><a href="/Home">Anasayfa</a></li>
                    <li class="breadcrumb-item"><a href="#">Yazarlar</a></li>
                    <li class="breadcrumb-item active">@Model.Data.FullName</li>
                </ol>
            </div><!-- end col -->
        </div><!-- end row -->
    </div><!-- end container -->
</div><!-- end page-title -->

<section class="section">
    <div class="container">
        <div class="row">
            <div class="col-lg-9 col-md-12 col-sm-12 col-xs-12">
                <div class="page-wrapper">

                    @await Component.InvokeAsync("AuthorBox", new { userId = Model.Data.Id })

                    <hr class="invis1">

                    @await Component.InvokeAsync("PostRecent", new { skip = 0, userId = Model.Data.Id })

                </div><!-- end page-wrapper -->

                <hr class="invis">

                <div class="row">
                    <div class="col-md-12">
                        @await Component.InvokeAsync("Pager")
                    </div><!-- end col -->
                </div><!-- end row -->

            </div><!-- end col -->
        </div><!-- end row -->
    </div><!-- end container -->
</section>